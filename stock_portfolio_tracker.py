# -*- coding: utf-8 -*-
"""Stock_portfolio_Tracker.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tjk9k5dw-C2UjgirgTpFekkxkQ8Xhq9V
"""

import requests

# Alpha Vantage API key
API_KEY = '7RZBDFCY2RPUTPU5'

# URL to fetch stock data from Alpha Vantage
BASE_URL = 'https://www.alphavantage.co/query'

# A sample portfolio that tracks stock symbols, quantity, and purchase price
portfolio = {}

def get_stock_price(symbol):
    """Fetch real-time stock price from Alpha Vantage API."""
    params = {
        'function': 'GLOBAL_QUOTE',
        'symbol': symbol,
        'apikey': API_KEY
    }

    response = requests.get(BASE_URL, params=params)
    data = response.json()

    if "Global Quote" in data:
        return float(data["Global Quote"]["05. price"])
    else:
        print("Error fetching stock data.")
        return None

def add_stock(symbol, quantity, purchase_price):
    """Add stock to the portfolio."""
    portfolio[symbol] = {
        'quantity': quantity,
        'purchase_price': purchase_price
    }
    print(f"Added {symbol} - {quantity} shares at ${purchase_price} each.")

def remove_stock(symbol):
    """Remove stock from the portfolio."""
    if symbol in portfolio:
        del portfolio[symbol]
        print(f"Removed {symbol} from your portfolio.")
    else:
        print(f"{symbol} is not in your portfolio.")

def view_portfolio():
    """Display the current portfolio and stock performance."""
    if not portfolio:
        print("Your portfolio is empty.")
        return

    print("\nYour Portfolio:")
    for symbol, stock in portfolio.items():
        quantity = stock['quantity']
        purchase_price = stock['purchase_price']
        current_price = get_stock_price(symbol)

        if current_price:
            total_invested = quantity * purchase_price
            current_value = quantity * current_price
            gain_loss = current_value - total_invested

            print(f"\nStock: {symbol}")
            print(f"Quantity: {quantity}")
            print(f"Purchase Price: ${purchase_price}")
            print(f"Current Price: ${current_price}")
            print(f"Total Invested: ${total_invested:.2f}")
            print(f"Current Value: ${current_value:.2f}")
            print(f"Gain/Loss: ${gain_loss:.2f}")
        else:
            print(f"Could not retrieve current price for {symbol}.")

def portfolio_menu():
    """Menu for managing the stock portfolio."""
    while True:
        print("\nPortfolio Menu:")
        print("1. Add Stock")
        print("2. Remove Stock")
        print("3. View Portfolio")
        print("4. Exit")

        choice = input("Enter your choice (1-4): ")

        if choice == '1':
            symbol = input("Enter stock symbol: ").upper()
            quantity = int(input("Enter quantity: "))
            purchase_price = float(input("Enter purchase price: "))
            add_stock(symbol, quantity, purchase_price)
        elif choice == '2':
            symbol = input("Enter stock symbol to remove: ").upper()
            remove_stock(symbol)
        elif choice == '3':
            view_portfolio()
        elif choice == '4':
            print("Exiting portfolio tracker.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    portfolio_menu()

